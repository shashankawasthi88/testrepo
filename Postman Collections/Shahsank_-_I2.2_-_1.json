{
  "info": {
    "_postman_id": "38136cde-4e60-4b58-8158-8e4fa563ad94",
    "name": "Basic Collection",
    "description": "This collection contains requests that will be used to test validity of plugin created to convert postman request into code snippet of particular language.",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "Request Headers (With special Characters)",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "420685ba-9513-4199-9ec6-99e0ddf38b93",
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "e411b645-d5cb-4ac1-b190-a40d48040049",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "my-sample-header",
            "value": "Lorem ipsum dolor sit amet"
          },
          {
            "key": "TEST",
            "value": "@#$%^&*()"
          },
          {
            "key": "more",
            "value": ",./';[]}{\":?><|\\\\"
          }
        ],
        "url": "https://postman-echo.com/headers",
        "description": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response."
      },
      "response": [
        {
          "id": "3a720030-262d-48da-828c-2a6973c1ba4e",
          "name": "Request Headers (With special Characters) Example 1",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "key": "my-sample-header",
                "value": "Lorem ipsum dolor sit amet"
              },
              {
                "key": "TEST",
                "value": "@#$%^&*()"
              },
              {
                "key": "more",
                "value": ",./';[]}{\":?><|\\\\"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": "https://postman-echo.com/headers"
          },
          "status": "Created",
          "code": 201,
          "_postman_previewlanguage": "json",
          "header": [],
          "cookie": [],
          "responseTime": null,
          "body": "{\n    \"data\" : \"try eaxmaple\"\n}"
        },
        {
          "id": "ef4c0c32-e629-4936-982c-beff59f829b5",
          "name": "Request Headers (With special Characters) - Exmaple from actual response",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "key": "my-sample-header",
                "value": "Lorem ipsum dolor sit amet"
              },
              {
                "key": "TEST",
                "value": "@#$%^&*()"
              },
              {
                "key": "more",
                "value": ",./';[]}{\":?><|\\\\"
              }
            ],
            "url": "https://postman-echo.com/headers"
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Date",
              "value": "Tue, 25 Aug 2020 09:22:55 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "422"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"1a6-6N1pTv8Jg4ykSs/s9BzmajLWUnU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3Aasy_ew4aS3RTwAjhkBoMLPCj910a-OP_.fCCLMELncpsU4lyJnkqWeJv5rx06eSSA4rQOdFMS9AM; Path=/; HttpOnly"
            }
          ],
          "cookie": [],
          "responseTime": null,
          "body": "{\n    \"headers\": {\n        \"x-forwarded-proto\": \"https\",\n        \"x-forwarded-port\": \"443\",\n        \"host\": \"postman-echo.com\",\n        \"x-amzn-trace-id\": \"Root=1-5f44d86f-e4d465562c3d6e95160c104f\",\n        \"my-sample-header\": \"Lorem ipsum dolor sit amet\",\n        \"test\": \"@#$%^&*()\",\n        \"more\": \",./';[]}{\\\":?><|\\\\\\\\\",\n        \"user-agent\": \"PostmanRuntime/7.26.3\",\n        \"accept\": \"*/*\",\n        \"cache-control\": \"no-cache\",\n        \"postman-token\": \"160b594a-196e-4f9f-af1e-88e3d121bff1\",\n        \"accept-encoding\": \"gzip, deflate, br\"\n    }\n}"
        }
      ]
    },
    {
      "name": "Request Headers",
      "_postman_id": "75c8ea68-8b0e-4a21-aa39-836d319e5f91",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "my-sample-header",
            "value": "Lorem ipsum dolor sit amet"
          },
          {
            "key": "testing",
            "value": "'singlequotes'"
          },
          {
            "key": "TEST",
            "value": "\"doublequotes\""
          },
          {
            "key": "Content-Type",
            "value": "text/plain"
          }
        ],
        "url": "https://postman-echo.com/headers",
        "description": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response."
      },
      "response": []
    },
    {
      "name": "Request Headers with disabled headers",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "44dca0e6-332a-4127-b1bf-bb58a1713a53",
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "11137958-a5c6-4f72-a181-b26ca0a62602",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "my-sample-header",
            "value": "Lorem ipsum dolor sit amet"
          },
          {
            "key": "not-disabled-header",
            "value": "ENABLED"
          },
          {
            "key": "disabled header",
            "value": "DISABLED",
            "disabled": true
          }
        ],
        "url": "https://postman-echo.com/headers",
        "description": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response."
      },
      "response": []
    },
    {
      "name": "GET Request with disabled query",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "9d1793ab-5300-46fd-9594-5ab403afafc4",
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "b932cd0e-9d26-4b27-94ca-d498156118bf",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "https://postman-echo.com/get?test=123&anotherone=232",
          "protocol": "https",
          "host": [
            "postman-echo",
            "com"
          ],
          "path": [
            "get"
          ],
          "query": [
            {
              "key": "test",
              "value": "123"
            },
            {
              "key": "anotherone",
              "value": "232"
            },
            {
              "key": "anotheroneone",
              "value": "sdfsdf",
              "disabled": true
            }
          ]
        },
        "description": "The HTTP `GET` request method is meant to retrieve data from a server. The data\nis identified by a unique URI (Uniform Resource Identifier). \n\nA `GET` request can pass parameters to the server using \"Query String \nParameters\". For example, in the following request,\n\n> http://example.com/hi/there?hand=wave\n\nThe parameter \"hand\" has the value \"wave\".\n\nThis endpoint echoes the HTTP headers, request parameters and the complete\nURI requested."
      },
      "response": []
    },
    {
      "name": "POST Raw Text",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "8d90a7f3-4a86-4f6e-b860-0e8020e20b25",
            "exec": [
              "var responseJSON;",
              "",
              "try { ",
              "    responseJSON = JSON.parse(responseBody); ",
              "    tests['response is valid JSON'] = true;",
              "}",
              "catch (e) { ",
              "    responseJSON = {}; ",
              "    tests['response is valid JSON'] = false;",
              "}",
              "",
              "",
              "tests['response has post data'] = _.has(responseJSON, 'data');",
              "tests['response matches the data posted'] = (responseJSON.data && responseJSON.data.length === 281);",
              "",
              "tests[\"content-type equals text/plain\"] = responseJSON && responseJSON.headers && (responseJSON.headers[\"content-type\"] === 'text/plain');"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "2f0c1d4f-b366-4ec9-9fe3-21eabd1b1618",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "text/plain"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium. Praesent neque quam, tincidunt nec leo eget, rutrum vehicula magna.\nMaecenas consequat elementum elit, id semper sem tristique et. Integer pulvinar enim quis consectetur interdum volutpat. !@#$%^&*()_+-=,.<>/?",
          "options": {
            "raw": {}
          }
        },
        "url": "https://postman-echo.com/post",
        "description": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested."
      },
      "response": []
    },
    {
      "name": "POST json with raw",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "8702e8c7-a627-4d29-b072-2b61aea44376",
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "110792fd-6598-4183-88e1-4a3792871c06",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"json\": \"Test-Test\"\n}",
          "options": {
            "raw": {}
          }
        },
        "url": "https://postman-echo.com/post",
        "description": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested."
      },
      "response": []
    },
    {
      "name": "POST graphql body(json) with raw",
      "_postman_id": "6541193e-e913-4b28-aae6-0d7c926c30d0",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "{\n    body{\n        graphql\n    }\n}",
            "variables": "{\n\t\"variable_key\": \"variable_value\"\n}"
          },
          "options": {
            "graphql": {}
          }
        },
        "url": "http://postman-echo.com/post"
      },
      "response": []
    },
    {
      "name": "POST javascript with raw",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "d99f07fc-c08c-4714-9c5d-143e954d2438",
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "e181d6be-f953-4cd1-8af8-32882f5bc69e",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/javascript"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "var val = 6;\nconsole.log(val);",
          "options": {
            "raw": {}
          }
        },
        "url": "https://postman-echo.com/post",
        "description": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested."
      },
      "response": []
    },
    {
      "name": "POST text/xml with raw",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "82fc81ef-05d4-4bdb-87b4-5966e07a6a46",
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "580ea1e5-fc22-4fee-a37a-a586896c0a74",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "text/xml"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "<xml>\n\tTest Test\n</xml>",
          "options": {
            "raw": {}
          }
        },
        "url": "https://postman-echo.com/post",
        "description": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested."
      },
      "response": []
    },
    {
      "name": "POST text/html with raw",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "5dc0b27d-08be-4bc1-8545-27fd966e7ea8",
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "b0cd883a-e576-4912-9730-8b68a8c9da01",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "text/html"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "<html>\n  Test Test\n</html>",
          "options": {
            "raw": {}
          }
        },
        "url": "https://postman-echo.com/post",
        "description": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested."
      },
      "response": []
    },
    {
      "name": "POST urlencoded data",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "40afc128-fa73-4de5-b441-5488ac55b1c0",
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "529ebcb3-5a01-4cb9-aedf-ee3e73a4e350",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/x-www-form-urlencoded"
          }
        ],
        "body": {
          "mode": "urlencoded",
          "urlencoded": [
            {
              "key": "1",
              "value": "'a'",
              "type": "text"
            },
            {
              "key": "2",
              "value": "\"b\"",
              "type": "text"
            },
            {
              "key": "'3'",
              "value": "c",
              "type": "text"
            },
            {
              "key": "\"4\"",
              "value": "d",
              "type": "text"
            },
            {
              "key": "Special",
              "value": "!@#$%*()^_=`&~              ",
              "type": "text"
            },
            {
              "key": "more",
              "value": ",./';[]}{\":?><|\\\\    ",
              "type": "text"
            }
          ],
          "options": {
            "urlencoded": {}
          }
        },
        "url": "https://postman-echo.com/post",
        "description": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested."
      },
      "response": []
    },
    {
      "name": "PUT Request",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "var responseJSON;",
              "",
              "try { ",
              "    responseJSON = JSON.parse(responseBody); ",
              "    tests['response is valid JSON'] = true;",
              "}",
              "catch (e) { ",
              "    responseJSON = {}; ",
              "    tests['response is valid JSON'] = false;",
              "}",
              "",
              "",
              "tests['response has PUT data'] = _.has(responseJSON, 'data');",
              "tests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);"
            ],
            "id": "b3c8db4c-4f7e-4bcb-ba55-0c42c695d34c"
          }
        }
      ],
      "_postman_id": "28746778-4eed-4509-873a-0b2ac33c9e24",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "text/plain"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "Etiam mi lacus, cursus vitae felis et, blandit pellentesque neque. Vestibulum eget nisi a tortor commodo dignissim.\nQuisque ipsum ligula, faucibus a felis a, commodo elementum nisl. Mauris vulputate sapien et tincidunt viverra. Donec vitae velit nec metus.",
          "options": {
            "raw": {}
          }
        },
        "url": "https://postman-echo.com/put",
        "description": "The HTTP `PUT` request method is similar to HTTP `POST`. It too is meant to \ntransfer data to a server (and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `PUT` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following \nraw HTTP request,\n\n> PUT /hi/there?hand=wave\n>\n> <request-body>\n\n\n"
      },
      "response": []
    },
    {
      "name": "PATCH Request",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "var responseJSON;",
              "",
              "try { ",
              "    responseJSON = JSON.parse(responseBody); ",
              "    tests['response is valid JSON'] = true;",
              "}",
              "catch (e) { ",
              "    responseJSON = {}; ",
              "    tests['response is valid JSON'] = false;",
              "}",
              "",
              "",
              "tests['response has PUT data'] = _.has(responseJSON, 'data');",
              "tests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);"
            ],
            "id": "f328d066-a8bd-4cb4-b68a-eb4ed5d25e12"
          }
        }
      ],
      "_postman_id": "94eee9fb-750b-410e-addd-ab02be00f1f1",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "text/plain"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "Curabitur auctor, elit nec pulvinar porttitor, ex augue condimentum enim, eget suscipit urna felis quis neque.\nSuspendisse sit amet luctus massa, nec venenatis mi. Suspendisse tincidunt massa at nibh efficitur fringilla. Nam quis congue mi. Etiam volutpat.",
          "options": {
            "raw": {}
          }
        },
        "url": "https://postman-echo.com/patch",
        "description": "The HTTP `PATCH` method is used to update resources on a server. The exact\nuse of `PATCH` requests depends on the server in question. There are a number\nof server implementations which handle `PATCH` differently. Technically, \n`PATCH` supports both Query String parameters and a Request Body.\n\nThis endpoint accepts an HTTP `PATCH` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body."
      },
      "response": []
    },
    {
      "name": "DELETE Request",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "var responseJSON;",
              "",
              "try { ",
              "    responseJSON = JSON.parse(responseBody); ",
              "    tests['response is valid JSON'] = true;",
              "}",
              "catch (e) { ",
              "    responseJSON = {}; ",
              "    tests['response is valid JSON'] = false;",
              "}",
              "",
              "",
              "tests['response has PUT data'] = _.has(responseJSON, 'data');",
              "tests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);"
            ],
            "id": "42ee6a77-61f3-4773-a866-80ee742b472e"
          }
        }
      ],
      "_postman_id": "8210f18a-cea4-4b7a-b60b-ffe7c157f90b",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Content-Type",
            "value": "text/plain"
          }
        ],
        "url": "https://postman-echo.com/delete",
        "description": "The HTTP `DELETE` method is used to delete resources on a server. The exact\nuse of `DELETE` requests depends on the server implementation. In general, \n`DELETE` requests support both, Query String parameters as well as a Request \nBody.\n\nThis endpoint accepts an HTTP `DELETE` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body."
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "eab02a5a-c204-4aad-a0f5-711e5b04f146",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "a857fdc5-f46c-4999-b515-64b2eb39dde7",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "id": "84e49da8-889f-4a94-950e-3df10976de36",
      "key": "my_variable",
      "value": "",
      "type": "string"
    }
  ]
}